
#  █████╗ ██╗      █████╗  ██████╗██████╗ ██╗████████╗████████╗██╗   ██╗
# ██╔══██╗██║     ██╔══██╗██╔════╝██╔══██╗██║╚══██╔══╝╚══██╔══╝╚██╗ ██╔╝
# ███████║██║     ███████║██║     ██████╔╝██║   ██║      ██║    ╚████╔╝
# ██╔══██║██║     ██╔══██║██║     ██╔══██╗██║   ██║      ██║     ╚██╔╝
# ██║  ██║███████╗██║  ██║╚██████╗██║  ██║██║   ██║      ██║      ██║
# ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝   ╚═╝      ╚═╝      ╚═╝
# A cross-platform, OpenGL terminal emulator.
# https://alacritty.org

live_config_reload: true

env:
  TERM: xterm-256color

font:
  normal:
    family: "JetBrainsMono Nerd Font"
    style: Medium
  size: 15.0

window:
  decorations: buttonless

# NOTE: helpful hex codes
# \x1b = escape (useful for vim-related keybindings)
# \x02 = control-b (the default tmux prefix)

# Hints
#
# Terminal hints can be used to find text or hyperlink in the visible part of
# the terminal and pipe it to other applications.
hints:
  # Keys used for the hint labels.
  #alphabet: "jfkdls;ahgurieowpq"

  # List with all available hints
  #
  # Each hint must have any of `regex` or `hyperlinks` field and either an
  # `action` or a `command` field. The fields `mouse`, `binding` and
  # `post_processing` are optional.
  #
  # The `hyperlinks` option will cause OSC 8 escape sequence hyperlinks to be
  # highlighted.
  #
  # The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
  # `mouse.mods` accept the same values as they do in the `key_bindings` section.
  #
  # The `mouse.enabled` field controls if the hint should be underlined while
  # the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
  #
  # If the `post_processing` field is set to `true`, heuristics will be used to
  # shorten the match if there are characters likely not to be part of the hint
  # (e.g. a trailing `.`). This is most useful for URIs and applies only to
  # `regex` matches.
  #
  # Values for `action`:
  #   - Copy
  #       Copy the hint's text to the clipboard.
  #   - Paste
  #       Paste the hint's text to the terminal or search.
  #   - Select
  #       Select the hint's text.
  #   - MoveViModeCursor
  #       Move the vi mode cursor to the beginning of the hint.
  enabled:
  - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
            [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
    hyperlinks: true
    command: open
    post_processing: true
    mouse:
      enabled: true
      mods: None
    binding:
      key: U
      mods: Command

colors:
  hints:
    start:
     foreground: '#1d1f21'
     background: '#e9ff5e'

shell:
  program: /bin/bash
  args:
    - --login

key_bindings:
  - { key: Key1, mods: Command, chars: "\x021" } # select tmux window 1
  - { key: Key2, mods: Command, chars: "\x022" } #                ... 2
  - { key: Key3, mods: Command, chars: "\x023" } #                ... 3
  - { key: Key4, mods: Command, chars: "\x024" } #                ... 4
  - { key: Key5, mods: Command, chars: "\x025" } #                ... 5
  - { key: Key6, mods: Command, chars: "\x026" } #                ... 6
  - { key: Key7, mods: Command, chars: "\x027" } #                ... 7
  - { key: Key8, mods: Command, chars: "\x028" } #                ... 8
  - { key: Key9, mods: Command, chars: "\x029" } #                ... 9
  - { key: Comma, mods: Command, chars: "\x02," } # rename the current tmux window
  - { key: E, mods: Command, chars: "\x02L" } # switch to the last tmux session
  - { key: U, mods: Alt|Shift, chars: "\xc2\xa8" } 
  - { key: Apostrophe, mods: Command|Shift, chars: "\x02%" } # split tmux window vertically
  - { key: Apostrophe, mods: Command, chars: "\x02\"" } # split tmux window horizontally
  - { key: Slash, mods: Command, chars: "\x02\x5b\x3f" } # start tmux search mode
  # - { key: F, mods: Command|Shift, chars: "lf\r" } # open file manager 'gokcehan/lf'
  - { key: F, mods: Command|Shift, chars: "\x02v" } # search stdout from last executed output
  - { key: F, mods: Command, chars: ":GoToFile\r" } # open nvim in fzf lua files mode
  - { key: G, mods: Command, chars: "\x02g" } # open git manager 'jesseduffield/lazygit'
  - { key: Y, mods: Command, chars: "\x02y" } # open git manager for yadm-repo 'jesseduffield/lazygit'
  - { key: P, mods: Command, chars: "\x02Y" } # open git manager for yadm-priv-repo 'jesseduffield/lazygit'
  - { key: J, mods: Command, chars: "\x02\x54" } # open t - tmux smart session manager
  - { key: K, mods: Command, chars: "\x02s" } # open interactive tmux session client
  - { key: LBracket, mods: Command|Shift, chars: "\x02p" } # switch to next tmux window
#   - { key: P, mods: Command|Shift, chars: ":GoToCommand\n" } # commands
#   # - { key: Period, mods: Command, chars: "\x1b\x20\x2e\x0a" } (causes popup to be unfocused)
#   - { key: R, mods: Command, chars: "\x1b\x5b\x41\x0a" }
  - { key: RBracket, mods: Command|Shift, chars: "\x02n" }
#   - { key: Semicolon, mods: Command, chars: "\x02:" } # enter the tmux command prompt
  - { key: T, mods: Command, chars: "\x02c" } # create a new tmux window
  - { key: W, mods: Command, chars: "\x02x" } # kill the current pane
  - { key: Z, mods: Command, chars: "\x02z" } # toggle zoom state of the current tmux pane

import:
  - ~/.config/alacritty/embark.yaml

# debug:
  # Display the time it takes to redraw each frame.
  # render_timer: true

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Renderer override.
  #   - glsl3
  #   - gles2
  #   - gles2_pure
  #renderer: None

  # Print all received window events.
  # print_events: true

  # Highlight window damage information.
  # highlight_damage: false
