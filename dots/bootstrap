#!/bin/bash
set -eu
trap 'echo "EXIT detected with exit status $?"' EXIT

# helpers
function echo_ok() { echo -e '\033[1;32m'"$1"'\033[0m'; }
function echo_warn() { echo -e '\033[1;33m'"$1"'\033[0m'; }
function echo_error() { echo -e '\033[1;31mERROR: '"$1"'\033[0m'; }

system_type=$(uname -s)

declare -a rust_utils=(
  "eza"
  "bat"
  "starship"
  "cargo-update"
  "cargo-cache"
  "fd-find"
  "git-delta"
  "ripgrep"
  "zoxide"
  "sd"
  "topgrade"
  "du-dust"
  "stylua"
)

sudo yum install openssl openssl-devel -y

install_brew() {
  # Proudly borrowed from:
  # https://github.com/duckfullstop/dotfiles/blob/f734eea399a7ccd1c25b57242997e79f230abc4d/.config/yadm/bootstrap
  XDG_CONFIG_HOME="$HOME/.config"
  BREWFILE_DIR=$XDG_CONFIG_HOME/Brews

  # install Homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo_warn "Installing Homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  fi

  echo_warn "Installing Generic tools via brew"

  brew tap arl/arl
  brew install cmake \
               gitmux \
               jesseduffield/lazygit/lazygit \
               awscli \
               curl \
               wget \
               fzf \
               git \
               htop \
               neovim \
               tmux \
               less \
               restic \
               btop \
               npm \

  if [ "$system_type" = "Darwin" ]; then
    echo_warn "Installing MAC tools via brew"
    brew tap "homebrew/cask-fonts"

    brew install koekeishiya/formulae/skhd \
                 unison \
                 python3

    brew cask install stats alacritty unnaturalscrollwheels font-jetbrains-mono-nerd-font koekeishiya/formulae/yabai raycast

    skhd --start-service
  fi
}

install_tpm() {
    echo_warn "INSTALLING TPM"
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
}

install_font() {
    # insatll jetBrainsMono Nerd Font
    cd $HOME && git clone --filter=blob:none --sparse git@github.com:ryanoasis/nerd-fonts
    cd nerd-fonts
    git sparse-checkout add patched-fonts/JetBrainsMono install.sh
    ./install.sh JetBrainsMono
}

install_fzf() {
    yes | $(brew --prefix)/opt/fzf/install
    wget https://raw.githubusercontent.com/junegunn/fzf-git.sh/main/fzf-git.sh
}

install_cargo() {
    curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- -y
    source "$HOME/.cargo/env"
    rustup toolchain install nightly
}

install_nvim() {
    echo_warn "INSTALLING NVIM"
    cd $HOME
    git clone git@github.com:neovim/neovim.git
    cd neovim/
    make CMAKE_BUILD_TYPE=RelWithDebInfo
    sudo make install
}

install_cmake() {
  cd $HOME
  wget https://github.com/Kitware/CMake/releases/download/v3.25.2/cmake-3.25.2-linux-x86_64.sh
  chmod u+x cmake-3.25.2-linux-x86_64.sh
  ./cmake-3.25.2-linux-x86_64.sh
}

install_nvm() {
  if ! command -v nvm >/dev/null 2>&1; then
    curl -o- --tlsv1.2 https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
  fi
}

configure_rust() {
  # Rust components
  declare -a rustup_components=(
    "rust-docs"
    "clippy"
    "llvm-tools"
    "rust-analyzer"
    "rustfmt"
    "cargo"
    "rust-std"
  )

  for var in ${rustup_components[@]}
  do
    rustup component add $var
    rustup component add --toolchain nightly $var
  done

  for var in ${rust_utils[@]}
  do
    cargo install $var
  done

  # Setup topgrade symlink 
  ln -sf $HOME/.config/topgrade/topgrade_linux.toml $HOME/.config/topgrade/topgrade.toml
  if [ "$system_type" = "Darwin" ]; then
    ln -sf $HOME/.config/topgrade/topgrade_darwin.toml $HOME/.config/topgrade/topgrade.toml
  fi
}

if [ "$system_type" = "Darwin" ]; then
  rust_utils+=("unison-fsmonitor")

  # increae max watched files for unison
  sudo sysctl kern.maxfiles=1310720 kern.maxfilesperproc=65536

  # disable automatic space rearranging
  defaults write com.apple.dock "mru-spaces" -bool "false" && killall Dock
  # Enable Dock autohide
  defaults write com.apple.dock autohide -bool true
  # No app icons in the Dock
  defaults delete com.apple.dock persistent-apps
  defaults delete com.apple.dock persistent-others
  killall Dock

  # Stolen from https://github.com/DoomHammer/dotfiles/blob/master/.config/yadm/bootstrap
  # Disable Ctrl+Arrow mapping for Mission Control as it's more useful for jumping words in a terminal
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 79 "{enabled = 0; value = { parameters = (65535, 123, 8650752); type = standard;};}"
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 80 "{enabled = 0; value = { parameters = (65535, 123, 8781824); type = standard;};}"
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 81 "{enabled = 0; value = { parameters = (65535, 124, 8650752); type = standard;};}"
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 82 "{enabled = 0; value = { parameters = (65535, 124, 8781824); type = standard;};}"
fi

# install_cmake
# install_tmux
# install_nvim
# install_font

install_brew
install_fzf
install_cargo
configure_rust
install_nvm
install_tpm
